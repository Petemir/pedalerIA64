FLANGER MONO

break flanger.asm:51
# dataBuffIn
graph display `x /4fw $rdi`                 
# dataBuffOut
graph display `x /4fw $rsi`                 
# dataBuffEffect
graph display `x /4fw $rdx+$rax*4`          
# dataBuff
graph display `x /4uw $rcx+$rax*4`          
# in / out
graph display $xmm2.v4_float                
# effect
graph display $xmm3.v4_int32                
# index
graph display $xmm3.v4_float                
# framesRead
graph display $r8                           
# eff_i
graph display $rax                          
# index sueltos
graph display $rbx                          
# effect sueltos
graph display /f $r10d                      
# el effect suelto que voy a buscar (effect[index[eff_i]])
graph display `x /1fw $rdx+$rbx*4`          
# los effect cargados en memoria (effect[index[eff_i..eff_i+3]])
graph display `x /4fw $rbp-16`              

inputExamples/gibson.wav output.wav -F 0.003 5 0.7



FLANGER STEREO
# main loop -> 23 veces
break flanger.asm:43
# stereo loop
break flanger.asm:127

# dataBuffIn
graph display `x /4fw $rdi`
# dataBuffOut
graph display `x /4fw $rsi`        
# dataBuffEffect
graph display `x /2fw $rdx+$rax*4`          
# dataBuff
graph display `x /2uw $rcx+$rax*4`          
# in / out
graph display $xmm1.v4_float
# out 
graph display $xmm2.v4_float
# effect
graph display $xmm3.v4_int32                
# index
graph display $xmm3.v4_float                
# framesRead
graph display $r8                           
# eff_i
graph display $rax                          
# index sueltos
graph display $rbx                          
# effect sueltos
graph display /f $r10d                      
# el effect suelto que voy a buscar (effect[index[eff_i]])
graph display `x /1fw $rdx+$rbx*4`          
# los effect cargados en memoria (effect[index[eff_i..eff_i+3]])
graph display `x /2fw $rbp-8`



inputExamples/guitar.wav output.wav -F 0.003 5 0.7